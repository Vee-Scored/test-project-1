import type { HTMLProps, ReactNode } from 'react';
import { Component } from 'react';
interface Options {
    reverse: boolean;
    max: number;
    perspective: number;
    scale: number;
    speed: number;
    transition: boolean;
    axis: null;
    reset: boolean;
    easing: string;
}
interface Props extends HTMLProps<HTMLDivElement> {
    angle?: number;
    children?: ReactNode;
    options?: Options;
}
interface State {
    style: React.CSSProperties;
}
export declare class Tilt extends Component<Props, State> {
    private ref;
    private width;
    private height;
    private left;
    private top;
    private transitionTimeout;
    private element;
    private reverse;
    private updateCall;
    private settings;
    constructor(props: Props);
    componentDidMount(): void;
    componentWillUnmount(): void;
    onMouseEnter: () => void;
    reset: () => void;
    onMouseMove: (e: React.MouseEvent<HTMLDivElement>) => void;
    onMouseLeave: () => void;
    getValues: (e: React.MouseEvent<HTMLDivElement>) => {
        tiltX: string;
        tiltY: string;
        percentageX: number;
        percentageY: number;
    };
    updateElementPosition: () => void;
    update: (e: React.MouseEvent<HTMLDivElement>) => void;
    render(): import("react").JSX.Element;
}
export {};
